@import "globals.cocoascript";

var onRun = function(context) {
    var sketch = context.api();
    var app = [NSApplication sharedApplication];
    var layers = sketch.selectedDocument.selectedLayers;
    //var filepath = "/Users/Young/Documents/pixelcode/app/tests/";
    var filepath = globals.filepath;

    if (layers.isEmpty) {
        context.document.showMessage("PixelCode: No artboard selected.");
    }
    else {
        layers.iterate(function(layer) {
            if (layer.isArtboard) {
                output = exportJSON(layer, filepath);

                if (output["isCorrect"]) {
                    var options = { 
                        "scales" : "1", 
                        "formats" : "svg", 
                        "overwriting" : "true", 
                        "output": filepath 
                    };
                    layer.export(options);
                    context.document.showMessage("PixelCode: Export finished!");
                } else { 
                    context.document.showMessage("PixelCode: Layer '" + output["incorrectLayer"] + "' is incorrectly labeled. Please check documentation.");
                }

            } else {
                context.document.showMessage("PixelCode: No artboard selected.");
            }
        });
    }
};

function exportJSON(artboard, filepath){
    var layerArray = [];
    var ret = { "isCorrect": true, "layerNames": [], "dictList": [] };

    artboard.iterate(function(layer) {
        if (layer.isImage) {
            var options = {
                "scales" : "1",
                "formats" : "png",
                "overwriting" : "true",
                "output": filepath
            };
            layer.export(options);
        }

        if (ret["isCorrect"]) {
            output = checkFormatting(layer, ret["layerNames"]);
            ret = output;
        }

        for (var i = 0; i < ret["dictList"].length; i++) {
            layerArray.push(ret["dictList"][i]);
        }
    });

    // Create JSON and save to file
    artboardName = artboard.name;
    var jsonObj = { layers : layerArray };
    var file = NSString.stringWithString(JSON.stringify(jsonObj, null, "\t"));
    [file writeToFile:filepath+artboardName+".json" atomically:true encoding:NSUTF8StringEncoding error:null];
    return ret;
}

// Account for sublayers in checking formatting
function checkFormatting(layer, layerNames) {
    var ret = {"isCorrect": true, "layerNames": layerNames, "dictList": [] }
    var stack = [layer];

    while (stack.length >= 1) {
        var currentLayer = stack.pop();
        layerName = String(currentLayer.name.replace(/\s+/, "-"));

        var currentDict = {};
        currentDict["name"] = layerName;
        currentDict["x"] = String(currentLayer.frame.x);
        currentDict["y"] = String(currentLayer.frame.y);
        currentDict["height"] = String(currentLayer.frame.height);
        currentDict["width"] = String(currentLayer.frame.width);
        if (currentLayer.isText) currentDict["text_align"] = String(currentLayer.alignment);

        var f = layerName.charAt(0);
        if (arrayContains(layerName, ret["layerNames"]) ||
            f !== f.toLowerCase()) {
            ret["isCorrect"] = false;
            ret["incorrectLayer"] = layerName;
        }

        ret["layerNames"].push(layerName);
        ret["dictList"].push(currentDict);

        if (currentLayer.isGroup) {
            currentLayer.iterate(function(subLayer) {
                stack.push(subLayer);
            });
        }
    }
    return ret;
}

function hasWhiteSpace(s) {
    return s.indexOf(' ') >= 0;
}

function arrayContains(needle, arrhaystack) {
    return (arrhaystack.indexOf(needle) > -1);
}
